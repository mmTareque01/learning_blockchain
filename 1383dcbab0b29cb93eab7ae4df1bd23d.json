{
	"id": "1383dcbab0b29cb93eab7ae4df1bd23d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.0",
	"solcLongVersion": "0.6.0+commit.26b70077",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Arrays.sol": {
				"content": "pragma solidity ^0.6.0;\n\ncontract MyContract{\n    //the storage arrays\n    //the memory arrays\n\n    uint []  myArr; // (crud) => create, read, update, delete\n\n    function insertData (uint _a) external{\n        myArr.push(_a);\n        // myArr.push(2);\n        // myArr.push(3);\n        // myArr.push(5);\n        // myArr.push(78);\n    }\n\n    function updateData(uint _b) external{\n        myArr[0] = _b;\n        // return myArr[0];\n    }\n\n    function readData() external view returns(uint){\n\n        return myArr[0];\n    }\n\n    function deleteData() external {\n        delete myArr[0];\n    } \n\n// memory array\n\n    function memArrays()external{\n        uint [] memory ages = new uint[](5);\n\n        //inserting data\n        ages[0] = 10;\n        ages[1] = 40;\n\n        //reading data\n        ages[0];\n\n        //updated \n        ages[0] = 89;\n\n        delete ages[2];\n\n\n\n    }\n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Arrays.sol": {
				"MyContract": {
					"abi": [
						{
							"inputs": [],
							"name": "deleteData",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_a",
									"type": "uint256"
								}
							],
							"name": "insertData",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "memArrays",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "readData",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_b",
									"type": "uint256"
								}
							],
							"name": "updateData",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/Arrays.sol\":25:881  contract MyContract{... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/Arrays.sol\":25:881  contract MyContract{... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Arrays.sol\":25:881  contract MyContract{... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/Arrays.sol\":25:881  contract MyContract{... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x09e96008\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x479291ef\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x80801431\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xbef55ef3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xe0ba432a\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Arrays.sol\":343:438  function updateData(uint _b) external{... */\n    tag_3:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_9\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_9:\n        /* \"contracts/Arrays.sol\":343:438  function updateData(uint _b) external{... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_10\n      jump\t// in\n    tag_8:\n      stop\n        /* \"contracts/Arrays.sol\":163:337  function insertData (uint _a) external{... */\n    tag_4:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_12\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_12:\n        /* \"contracts/Arrays.sol\":163:337  function insertData (uint _a) external{... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_13\n      jump\t// in\n    tag_11:\n      stop\n        /* \"contracts/Arrays.sol\":617:878  function memArrays()external{... */\n    tag_5:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      stop\n        /* \"contracts/Arrays.sol\":444:524  function readData() external view returns(uint){... */\n    tag_6:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Arrays.sol\":530:593  function deleteData() external {... */\n    tag_7:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      stop\n        /* \"contracts/Arrays.sol\":343:438  function updateData(uint _b) external{... */\n    tag_10:\n        /* \"contracts/Arrays.sol\":401:403  _b */\n      dup1\n        /* \"contracts/Arrays.sol\":390:395  myArr */\n      0x00\n        /* \"contracts/Arrays.sol\":396:397  0 */\n      dup1\n        /* \"contracts/Arrays.sol\":390:398  myArr[0] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_21\n      jumpi\n      invalid\n    tag_21:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"contracts/Arrays.sol\":390:403  myArr[0] = _b */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Arrays.sol\":343:438  function updateData(uint _b) external{... */\n      pop\n      jump\t// out\n        /* \"contracts/Arrays.sol\":163:337  function insertData (uint _a) external{... */\n    tag_13:\n        /* \"contracts/Arrays.sol\":211:216  myArr */\n      0x00\n        /* \"contracts/Arrays.sol\":222:224  _a */\n      dup2\n        /* \"contracts/Arrays.sol\":211:225  myArr.push(_a) */\n      swap1\n      dup1\n        /* \"--CODEGEN--\":39:40   */\n      0x01\n        /* \"--CODEGEN--\":33:36   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      sload\n        /* \"--CODEGEN--\":23:41   */\n      add\n        /* \"--CODEGEN--\":57:67   */\n      dup1\n        /* \"--CODEGEN--\":52:55   */\n      dup3\n        /* \"--CODEGEN--\":45:68   */\n      sstore\n        /* \"--CODEGEN--\":79:89   */\n      dup1\n        /* \"--CODEGEN--\":72:89   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:93   */\n      pop\n        /* \"contracts/Arrays.sol\":211:225  myArr.push(_a) */\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      sstore\n        /* \"contracts/Arrays.sol\":163:337  function insertData (uint _a) external{... */\n      pop\n      jump\t// out\n        /* \"contracts/Arrays.sol\":617:878  function memArrays()external{... */\n    tag_15:\n        /* \"contracts/Arrays.sol\":655:674  uint [] memory ages */\n      0x60\n        /* \"contracts/Arrays.sol\":688:689  5 */\n      0x05\n        /* \"contracts/Arrays.sol\":677:690  new uint[](5) */\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_26\n      jumpi\n      dup2\n      0x20\n      add\n        /* \"--CODEGEN--\":29:31   */\n      0x20\n        /* \"--CODEGEN--\":21:27   */\n      dup3\n        /* \"--CODEGEN--\":17:32   */\n      mul\n        /* \"--CODEGEN--\":117:121   */\n      dup1\n        /* \"--CODEGEN--\":105:115   */\n      codesize\n        /* \"--CODEGEN--\":97:103   */\n      dup4\n        /* \"--CODEGEN--\":88:122   */\n      codecopy\n        /* \"--CODEGEN--\":148:152   */\n      dup1\n        /* \"--CODEGEN--\":140:146   */\n      dup3\n        /* \"--CODEGEN--\":136:153   */\n      add\n        /* \"--CODEGEN--\":126:153   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:157   */\n      pop\n        /* \"contracts/Arrays.sol\":677:690  new uint[](5) */\n      swap1\n      pop\n    tag_26:\n      pop\n        /* \"contracts/Arrays.sol\":655:690  uint [] memory ages = new uint[](5) */\n      swap1\n      pop\n        /* \"contracts/Arrays.sol\":736:738  10 */\n      0x0a\n        /* \"contracts/Arrays.sol\":726:730  ages */\n      dup2\n        /* \"contracts/Arrays.sol\":731:732  0 */\n      0x00\n        /* \"contracts/Arrays.sol\":726:733  ages[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_27\n      jumpi\n      invalid\n    tag_27:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/Arrays.sol\":726:738  ages[0] = 10 */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Arrays.sol\":758:760  40 */\n      0x28\n        /* \"contracts/Arrays.sol\":748:752  ages */\n      dup2\n        /* \"contracts/Arrays.sol\":753:754  1 */\n      0x01\n        /* \"contracts/Arrays.sol\":748:755  ages[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_28\n      jumpi\n      invalid\n    tag_28:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/Arrays.sol\":748:760  ages[1] = 40 */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Arrays.sol\":794:798  ages */\n      dup1\n        /* \"contracts/Arrays.sol\":799:800  0 */\n      0x00\n        /* \"contracts/Arrays.sol\":794:801  ages[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_29\n      jumpi\n      invalid\n    tag_29:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      pop\n        /* \"contracts/Arrays.sol\":841:843  89 */\n      0x59\n        /* \"contracts/Arrays.sol\":831:835  ages */\n      dup2\n        /* \"contracts/Arrays.sol\":836:837  0 */\n      0x00\n        /* \"contracts/Arrays.sol\":831:838  ages[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_30\n      jumpi\n      invalid\n    tag_30:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/Arrays.sol\":831:843  ages[0] = 89 */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Arrays.sol\":861:865  ages */\n      dup1\n        /* \"contracts/Arrays.sol\":866:867  2 */\n      0x02\n        /* \"contracts/Arrays.sol\":861:868  ages[2] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_31\n      jumpi\n      invalid\n    tag_31:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/Arrays.sol\":854:868  delete ages[2] */\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/Arrays.sol\":617:878  function memArrays()external{... */\n      pop\n      jump\t// out\n        /* \"contracts/Arrays.sol\":444:524  function readData() external view returns(uint){... */\n    tag_17:\n        /* \"contracts/Arrays.sol\":486:490  uint */\n      0x00\n        /* \"contracts/Arrays.sol\":509:514  myArr */\n      dup1\n        /* \"contracts/Arrays.sol\":515:516  0 */\n      0x00\n        /* \"contracts/Arrays.sol\":509:517  myArr[0] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_33\n      jumpi\n      invalid\n    tag_33:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"contracts/Arrays.sol\":502:517  return myArr[0] */\n      swap1\n      pop\n        /* \"contracts/Arrays.sol\":444:524  function readData() external view returns(uint){... */\n      swap1\n      jump\t// out\n        /* \"contracts/Arrays.sol\":530:593  function deleteData() external {... */\n    tag_19:\n        /* \"contracts/Arrays.sol\":578:583  myArr */\n      0x00\n        /* \"contracts/Arrays.sol\":584:585  0 */\n      dup1\n        /* \"contracts/Arrays.sol\":578:586  myArr[0] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_36\n      jumpi\n      invalid\n    tag_36:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"contracts/Arrays.sol\":571:586  delete myArr[0] */\n      0x00\n      swap1\n      sstore\n        /* \"contracts/Arrays.sol\":530:593  function deleteData() external {... */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201a7c28d655df6592df97b4dc0694689087f6b210436bd762c8fcc3a72b9a977b64736f6c63430006000033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061025f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806309e960081461005c578063479291ef1461008a57806380801431146100b8578063bef55ef3146100c2578063e0ba432a146100e0575b600080fd5b6100886004803603602081101561007257600080fd5b81019080803590602001909291905050506100ea565b005b6100b6600480360360208110156100a057600080fd5b8101908080359060200190929190505050610109565b005b6100c0610135565b005b6100ca6101ed565b6040518082815260200191505060405180910390f35b6100e861020c565b005b80600080815481106100f857fe5b906000526020600020018190555050565b600081908060018154018082558091505060019003906000526020600020016000909190919091505550565b606060056040519080825280602002602001820160405280156101675781602001602082028038833980820191505090505b509050600a8160008151811061017957fe5b60200260200101818152505060288160018151811061019457fe5b602002602001018181525050806000815181106101ad57fe5b6020026020010151506059816000815181106101c557fe5b602002602001018181525050806002815181106101de57fe5b60200260200101600081525050565b6000806000815481106101fc57fe5b9060005260206000200154905090565b6000808154811061021957fe5b906000526020600020016000905556fea26469706673582212201a7c28d655df6592df97b4dc0694689087f6b210436bd762c8fcc3a72b9a977b64736f6c63430006000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9E96008 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x479291EF EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0x80801431 EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0xBEF55EF3 EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0xE0BA432A EQ PUSH2 0xE0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xEA JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x109 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC0 PUSH2 0x135 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCA PUSH2 0x1ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE8 PUSH2 0x20C JUMP JUMPDEST STOP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP2 SLOAD DUP2 LT PUSH2 0xF8 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x167 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0xA DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x179 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x28 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x194 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1AD JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD POP PUSH1 0x59 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1C5 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x1DE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD PUSH1 0x0 DUP2 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x1FC JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP2 SLOAD DUP2 LT PUSH2 0x219 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE PUSH29 0x28D655DF6592DF97B4DC0694689087F6B210436BD762C8FCC3A72B9A97 PUSH28 0x64736F6C634300060000330000000000000000000000000000000000 ",
							"sourceMap": "25:856:0:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25:856:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c806309e960081461005c578063479291ef1461008a57806380801431146100b8578063bef55ef3146100c2578063e0ba432a146100e0575b600080fd5b6100886004803603602081101561007257600080fd5b81019080803590602001909291905050506100ea565b005b6100b6600480360360208110156100a057600080fd5b8101908080359060200190929190505050610109565b005b6100c0610135565b005b6100ca6101ed565b6040518082815260200191505060405180910390f35b6100e861020c565b005b80600080815481106100f857fe5b906000526020600020018190555050565b600081908060018154018082558091505060019003906000526020600020016000909190919091505550565b606060056040519080825280602002602001820160405280156101675781602001602082028038833980820191505090505b509050600a8160008151811061017957fe5b60200260200101818152505060288160018151811061019457fe5b602002602001018181525050806000815181106101ad57fe5b6020026020010151506059816000815181106101c557fe5b602002602001018181525050806002815181106101de57fe5b60200260200101600081525050565b6000806000815481106101fc57fe5b9060005260206000200154905090565b6000808154811061021957fe5b906000526020600020016000905556fea26469706673582212201a7c28d655df6592df97b4dc0694689087f6b210436bd762c8fcc3a72b9a977b64736f6c63430006000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9E96008 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x479291EF EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0x80801431 EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0xBEF55EF3 EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0xE0BA432A EQ PUSH2 0xE0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xEA JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x109 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC0 PUSH2 0x135 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCA PUSH2 0x1ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE8 PUSH2 0x20C JUMP JUMPDEST STOP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP2 SLOAD DUP2 LT PUSH2 0xF8 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x167 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0xA DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x179 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x28 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x194 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1AD JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD POP PUSH1 0x59 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1C5 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x1DE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD PUSH1 0x0 DUP2 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x1FC JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP2 SLOAD DUP2 LT PUSH2 0x219 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE PUSH29 0x28D655DF6592DF97B4DC0694689087F6B210436BD762C8FCC3A72B9A97 PUSH28 0x64736F6C634300060000330000000000000000000000000000000000 ",
							"sourceMap": "25:856:0:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25:856:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;343:95;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;343:95:0;;;;;;;;;;;;;;;;;:::i;:::-;;163:174;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;163:174:0;;;;;;;;;;;;;;;;;:::i;:::-;;617:261;;;:::i;:::-;;444:80;;;:::i;:::-;;;;;;;;;;;;;;;;;;;530:63;;;:::i;:::-;;343:95;401:2;390:5;396:1;390:8;;;;;;;;;;;;;;;:13;;;;343:95;:::o;163:174::-;211:5;222:2;211:14;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;211:14:0;;;;;;;;;;;;;;;;;;;163:174;:::o;617:261::-;655:19;688:1;677:13;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;677:13:0;;;;655:35;;736:2;726:4;731:1;726:7;;;;;;;;;;;;;:12;;;;;758:2;748:4;753:1;748:7;;;;;;;;;;;;;:12;;;;;794:4;799:1;794:7;;;;;;;;;;;;;;;841:2;831:4;836:1;831:7;;;;;;;;;;;;;:12;;;;;861:4;866:1;861:7;;;;;;;;;;;;;854:14;;;;617:261;:::o;444:80::-;486:4;509:5;515:1;509:8;;;;;;;;;;;;;;;;502:15;;444:80;:::o;530:63::-;578:5;584:1;578:8;;;;;;;;;;;;;;;571:15;;;530:63::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "121400",
								"executionCost": "165",
								"totalCost": "121565"
							},
							"external": {
								"deleteData()": "6099",
								"insertData(uint256)": "41151",
								"memArrays()": "645",
								"readData()": "1937",
								"updateData(uint256)": "21100"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25,
									"end": 881,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 25,
									"end": 881,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 25,
									"end": 881,
									"name": "MSTORE"
								},
								{
									"begin": 25,
									"end": 881,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 25,
									"end": 881,
									"name": "POP"
								},
								{
									"begin": 25,
									"end": 881,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 881,
									"name": "DUP1"
								},
								{
									"begin": 25,
									"end": 881,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 881,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 881,
									"name": "CODECOPY"
								},
								{
									"begin": 25,
									"end": 881,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 881,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201a7c28d655df6592df97b4dc0694689087f6b210436bd762c8fcc3a72b9a977b64736f6c63430006000033",
									".code": [
										{
											"begin": 25,
											"end": 881,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 25,
											"end": 881,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25,
											"end": 881,
											"name": "MSTORE"
										},
										{
											"begin": 25,
											"end": 881,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 25,
											"end": 881,
											"name": "POP"
										},
										{
											"begin": 25,
											"end": 881,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 25,
											"end": 881,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 25,
											"end": 881,
											"name": "LT"
										},
										{
											"begin": 25,
											"end": 881,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 25,
											"end": 881,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 881,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25,
											"end": 881,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 25,
											"end": 881,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 25,
											"end": 881,
											"name": "SHR"
										},
										{
											"begin": 25,
											"end": 881,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 881,
											"name": "PUSH",
											"value": "9E96008"
										},
										{
											"begin": 25,
											"end": 881,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 881,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 25,
											"end": 881,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 881,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 881,
											"name": "PUSH",
											"value": "479291EF"
										},
										{
											"begin": 25,
											"end": 881,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 881,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 25,
											"end": 881,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 881,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 881,
											"name": "PUSH",
											"value": "80801431"
										},
										{
											"begin": 25,
											"end": 881,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 881,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 25,
											"end": 881,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 881,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 881,
											"name": "PUSH",
											"value": "BEF55EF3"
										},
										{
											"begin": 25,
											"end": 881,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 881,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 25,
											"end": 881,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 881,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 881,
											"name": "PUSH",
											"value": "E0BA432A"
										},
										{
											"begin": 25,
											"end": 881,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 881,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 25,
											"end": 881,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 881,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 25,
											"end": 881,
											"name": "JUMPDEST"
										},
										{
											"begin": 25,
											"end": 881,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25,
											"end": 881,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 881,
											"name": "REVERT"
										},
										{
											"begin": 343,
											"end": 438,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 343,
											"end": 438,
											"name": "JUMPDEST"
										},
										{
											"begin": 343,
											"end": 438,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 343,
											"end": 438,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 343,
											"end": 438,
											"name": "DUP1"
										},
										{
											"begin": 343,
											"end": 438,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 343,
											"end": 438,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 343,
											"end": 438,
											"name": "DUP2"
										},
										{
											"begin": 343,
											"end": 438,
											"name": "ADD"
										},
										{
											"begin": 343,
											"end": 438,
											"name": "SWAP1"
										},
										{
											"begin": 343,
											"end": 438,
											"name": "DUP1"
										},
										{
											"begin": 343,
											"end": 438,
											"name": "DUP1"
										},
										{
											"begin": 343,
											"end": 438,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 343,
											"end": 438,
											"name": "SWAP1"
										},
										{
											"begin": 343,
											"end": 438,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 343,
											"end": 438,
											"name": "ADD"
										},
										{
											"begin": 343,
											"end": 438,
											"name": "SWAP1"
										},
										{
											"begin": 343,
											"end": 438,
											"name": "SWAP3"
										},
										{
											"begin": 343,
											"end": 438,
											"name": "SWAP2"
										},
										{
											"begin": 343,
											"end": 438,
											"name": "SWAP1"
										},
										{
											"begin": 343,
											"end": 438,
											"name": "POP"
										},
										{
											"begin": 343,
											"end": 438,
											"name": "POP"
										},
										{
											"begin": 343,
											"end": 438,
											"name": "POP"
										},
										{
											"begin": 343,
											"end": 438,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 343,
											"end": 438,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 343,
											"end": 438,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 343,
											"end": 438,
											"name": "JUMPDEST"
										},
										{
											"begin": 343,
											"end": 438,
											"name": "STOP"
										},
										{
											"begin": 163,
											"end": 337,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 163,
											"end": 337,
											"name": "JUMPDEST"
										},
										{
											"begin": 163,
											"end": 337,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 163,
											"end": 337,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 163,
											"end": 337,
											"name": "DUP1"
										},
										{
											"begin": 163,
											"end": 337,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 163,
											"end": 337,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 163,
											"end": 337,
											"name": "DUP2"
										},
										{
											"begin": 163,
											"end": 337,
											"name": "ADD"
										},
										{
											"begin": 163,
											"end": 337,
											"name": "SWAP1"
										},
										{
											"begin": 163,
											"end": 337,
											"name": "DUP1"
										},
										{
											"begin": 163,
											"end": 337,
											"name": "DUP1"
										},
										{
											"begin": 163,
											"end": 337,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 163,
											"end": 337,
											"name": "SWAP1"
										},
										{
											"begin": 163,
											"end": 337,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 163,
											"end": 337,
											"name": "ADD"
										},
										{
											"begin": 163,
											"end": 337,
											"name": "SWAP1"
										},
										{
											"begin": 163,
											"end": 337,
											"name": "SWAP3"
										},
										{
											"begin": 163,
											"end": 337,
											"name": "SWAP2"
										},
										{
											"begin": 163,
											"end": 337,
											"name": "SWAP1"
										},
										{
											"begin": 163,
											"end": 337,
											"name": "POP"
										},
										{
											"begin": 163,
											"end": 337,
											"name": "POP"
										},
										{
											"begin": 163,
											"end": 337,
											"name": "POP"
										},
										{
											"begin": 163,
											"end": 337,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 163,
											"end": 337,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 163,
											"end": 337,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 163,
											"end": 337,
											"name": "JUMPDEST"
										},
										{
											"begin": 163,
											"end": 337,
											"name": "STOP"
										},
										{
											"begin": 617,
											"end": 878,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 617,
											"end": 878,
											"name": "JUMPDEST"
										},
										{
											"begin": 617,
											"end": 878,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 617,
											"end": 878,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 617,
											"end": 878,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 617,
											"end": 878,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 617,
											"end": 878,
											"name": "JUMPDEST"
										},
										{
											"begin": 617,
											"end": 878,
											"name": "STOP"
										},
										{
											"begin": 444,
											"end": 524,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 444,
											"end": 524,
											"name": "JUMPDEST"
										},
										{
											"begin": 444,
											"end": 524,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 444,
											"end": 524,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 444,
											"end": 524,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 444,
											"end": 524,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 444,
											"end": 524,
											"name": "JUMPDEST"
										},
										{
											"begin": 444,
											"end": 524,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 444,
											"end": 524,
											"name": "MLOAD"
										},
										{
											"begin": 444,
											"end": 524,
											"name": "DUP1"
										},
										{
											"begin": 444,
											"end": 524,
											"name": "DUP3"
										},
										{
											"begin": 444,
											"end": 524,
											"name": "DUP2"
										},
										{
											"begin": 444,
											"end": 524,
											"name": "MSTORE"
										},
										{
											"begin": 444,
											"end": 524,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 444,
											"end": 524,
											"name": "ADD"
										},
										{
											"begin": 444,
											"end": 524,
											"name": "SWAP2"
										},
										{
											"begin": 444,
											"end": 524,
											"name": "POP"
										},
										{
											"begin": 444,
											"end": 524,
											"name": "POP"
										},
										{
											"begin": 444,
											"end": 524,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 444,
											"end": 524,
											"name": "MLOAD"
										},
										{
											"begin": 444,
											"end": 524,
											"name": "DUP1"
										},
										{
											"begin": 444,
											"end": 524,
											"name": "SWAP2"
										},
										{
											"begin": 444,
											"end": 524,
											"name": "SUB"
										},
										{
											"begin": 444,
											"end": 524,
											"name": "SWAP1"
										},
										{
											"begin": 444,
											"end": 524,
											"name": "RETURN"
										},
										{
											"begin": 530,
											"end": 593,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 530,
											"end": 593,
											"name": "JUMPDEST"
										},
										{
											"begin": 530,
											"end": 593,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 530,
											"end": 593,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 530,
											"end": 593,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 530,
											"end": 593,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 530,
											"end": 593,
											"name": "JUMPDEST"
										},
										{
											"begin": 530,
											"end": 593,
											"name": "STOP"
										},
										{
											"begin": 343,
											"end": 438,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 343,
											"end": 438,
											"name": "JUMPDEST"
										},
										{
											"begin": 401,
											"end": 403,
											"name": "DUP1"
										},
										{
											"begin": 390,
											"end": 395,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 396,
											"end": 397,
											"name": "DUP1"
										},
										{
											"begin": 390,
											"end": 398,
											"name": "DUP2"
										},
										{
											"begin": 390,
											"end": 398,
											"name": "SLOAD"
										},
										{
											"begin": 390,
											"end": 398,
											"name": "DUP2"
										},
										{
											"begin": 390,
											"end": 398,
											"name": "LT"
										},
										{
											"begin": 390,
											"end": 398,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 390,
											"end": 398,
											"name": "JUMPI"
										},
										{
											"begin": 390,
											"end": 398,
											"name": "INVALID"
										},
										{
											"begin": 390,
											"end": 398,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 390,
											"end": 398,
											"name": "JUMPDEST"
										},
										{
											"begin": 390,
											"end": 398,
											"name": "SWAP1"
										},
										{
											"begin": 390,
											"end": 398,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 390,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 390,
											"end": 398,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 390,
											"end": 398,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 390,
											"end": 398,
											"name": "KECCAK256"
										},
										{
											"begin": 390,
											"end": 398,
											"name": "ADD"
										},
										{
											"begin": 390,
											"end": 403,
											"name": "DUP2"
										},
										{
											"begin": 390,
											"end": 403,
											"name": "SWAP1"
										},
										{
											"begin": 390,
											"end": 403,
											"name": "SSTORE"
										},
										{
											"begin": 390,
											"end": 403,
											"name": "POP"
										},
										{
											"begin": 343,
											"end": 438,
											"name": "POP"
										},
										{
											"begin": 343,
											"end": 438,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 163,
											"end": 337,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 163,
											"end": 337,
											"name": "JUMPDEST"
										},
										{
											"begin": 211,
											"end": 216,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 222,
											"end": 224,
											"name": "DUP2"
										},
										{
											"begin": 211,
											"end": 225,
											"name": "SWAP1"
										},
										{
											"begin": 211,
											"end": 225,
											"name": "DUP1"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "SLOAD"
										},
										{
											"begin": 23,
											"end": 41,
											"name": "ADD"
										},
										{
											"begin": 57,
											"end": 67,
											"name": "DUP1"
										},
										{
											"begin": 52,
											"end": 55,
											"name": "DUP3"
										},
										{
											"begin": 45,
											"end": 68,
											"name": "SSTORE"
										},
										{
											"begin": 79,
											"end": 89,
											"name": "DUP1"
										},
										{
											"begin": 72,
											"end": 89,
											"name": "SWAP2"
										},
										{
											"begin": 72,
											"end": 89,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 93,
											"name": "POP"
										},
										{
											"begin": 211,
											"end": 225,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 211,
											"end": 225,
											"name": "SWAP1"
										},
										{
											"begin": 211,
											"end": 225,
											"name": "SUB"
										},
										{
											"begin": 211,
											"end": 225,
											"name": "SWAP1"
										},
										{
											"begin": 211,
											"end": 225,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 211,
											"end": 225,
											"name": "MSTORE"
										},
										{
											"begin": 211,
											"end": 225,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 211,
											"end": 225,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 211,
											"end": 225,
											"name": "KECCAK256"
										},
										{
											"begin": 211,
											"end": 225,
											"name": "ADD"
										},
										{
											"begin": 211,
											"end": 225,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 211,
											"end": 225,
											"name": "SWAP1"
										},
										{
											"begin": 211,
											"end": 225,
											"name": "SWAP2"
										},
										{
											"begin": 211,
											"end": 225,
											"name": "SWAP1"
										},
										{
											"begin": 211,
											"end": 225,
											"name": "SWAP2"
										},
										{
											"begin": 211,
											"end": 225,
											"name": "SWAP1"
										},
										{
											"begin": 211,
											"end": 225,
											"name": "SWAP2"
										},
										{
											"begin": 211,
											"end": 225,
											"name": "POP"
										},
										{
											"begin": 211,
											"end": 225,
											"name": "SSTORE"
										},
										{
											"begin": 163,
											"end": 337,
											"name": "POP"
										},
										{
											"begin": 163,
											"end": 337,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 617,
											"end": 878,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 617,
											"end": 878,
											"name": "JUMPDEST"
										},
										{
											"begin": 655,
											"end": 674,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 688,
											"end": 689,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 677,
											"end": 690,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 677,
											"end": 690,
											"name": "MLOAD"
										},
										{
											"begin": 677,
											"end": 690,
											"name": "SWAP1"
										},
										{
											"begin": 677,
											"end": 690,
											"name": "DUP1"
										},
										{
											"begin": 677,
											"end": 690,
											"name": "DUP3"
										},
										{
											"begin": 677,
											"end": 690,
											"name": "MSTORE"
										},
										{
											"begin": 677,
											"end": 690,
											"name": "DUP1"
										},
										{
											"begin": 677,
											"end": 690,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 677,
											"end": 690,
											"name": "MUL"
										},
										{
											"begin": 677,
											"end": 690,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 677,
											"end": 690,
											"name": "ADD"
										},
										{
											"begin": 677,
											"end": 690,
											"name": "DUP3"
										},
										{
											"begin": 677,
											"end": 690,
											"name": "ADD"
										},
										{
											"begin": 677,
											"end": 690,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 677,
											"end": 690,
											"name": "MSTORE"
										},
										{
											"begin": 677,
											"end": 690,
											"name": "DUP1"
										},
										{
											"begin": 677,
											"end": 690,
											"name": "ISZERO"
										},
										{
											"begin": 677,
											"end": 690,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 677,
											"end": 690,
											"name": "JUMPI"
										},
										{
											"begin": 677,
											"end": 690,
											"name": "DUP2"
										},
										{
											"begin": 677,
											"end": 690,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 677,
											"end": 690,
											"name": "ADD"
										},
										{
											"begin": 29,
											"end": 31,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21,
											"end": 27,
											"name": "DUP3"
										},
										{
											"begin": 17,
											"end": 32,
											"name": "MUL"
										},
										{
											"begin": 117,
											"end": 121,
											"name": "DUP1"
										},
										{
											"begin": 105,
											"end": 115,
											"name": "CODESIZE"
										},
										{
											"begin": 97,
											"end": 103,
											"name": "DUP4"
										},
										{
											"begin": 88,
											"end": 122,
											"name": "CODECOPY"
										},
										{
											"begin": 148,
											"end": 152,
											"name": "DUP1"
										},
										{
											"begin": 140,
											"end": 146,
											"name": "DUP3"
										},
										{
											"begin": 136,
											"end": 153,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 153,
											"name": "SWAP2"
										},
										{
											"begin": 126,
											"end": 153,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 157,
											"name": "POP"
										},
										{
											"begin": 677,
											"end": 690,
											"name": "SWAP1"
										},
										{
											"begin": 677,
											"end": 690,
											"name": "POP"
										},
										{
											"begin": 677,
											"end": 690,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 677,
											"end": 690,
											"name": "JUMPDEST"
										},
										{
											"begin": 677,
											"end": 690,
											"name": "POP"
										},
										{
											"begin": 655,
											"end": 690,
											"name": "SWAP1"
										},
										{
											"begin": 655,
											"end": 690,
											"name": "POP"
										},
										{
											"begin": 736,
											"end": 738,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 726,
											"end": 730,
											"name": "DUP2"
										},
										{
											"begin": 731,
											"end": 732,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 726,
											"end": 733,
											"name": "DUP2"
										},
										{
											"begin": 726,
											"end": 733,
											"name": "MLOAD"
										},
										{
											"begin": 726,
											"end": 733,
											"name": "DUP2"
										},
										{
											"begin": 726,
											"end": 733,
											"name": "LT"
										},
										{
											"begin": 726,
											"end": 733,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 726,
											"end": 733,
											"name": "JUMPI"
										},
										{
											"begin": 726,
											"end": 733,
											"name": "INVALID"
										},
										{
											"begin": 726,
											"end": 733,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 726,
											"end": 733,
											"name": "JUMPDEST"
										},
										{
											"begin": 726,
											"end": 733,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 726,
											"end": 733,
											"name": "MUL"
										},
										{
											"begin": 726,
											"end": 733,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 726,
											"end": 733,
											"name": "ADD"
										},
										{
											"begin": 726,
											"end": 733,
											"name": "ADD"
										},
										{
											"begin": 726,
											"end": 738,
											"name": "DUP2"
										},
										{
											"begin": 726,
											"end": 738,
											"name": "DUP2"
										},
										{
											"begin": 726,
											"end": 738,
											"name": "MSTORE"
										},
										{
											"begin": 726,
											"end": 738,
											"name": "POP"
										},
										{
											"begin": 726,
											"end": 738,
											"name": "POP"
										},
										{
											"begin": 758,
											"end": 760,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 748,
											"end": 752,
											"name": "DUP2"
										},
										{
											"begin": 753,
											"end": 754,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 748,
											"end": 755,
											"name": "DUP2"
										},
										{
											"begin": 748,
											"end": 755,
											"name": "MLOAD"
										},
										{
											"begin": 748,
											"end": 755,
											"name": "DUP2"
										},
										{
											"begin": 748,
											"end": 755,
											"name": "LT"
										},
										{
											"begin": 748,
											"end": 755,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 748,
											"end": 755,
											"name": "JUMPI"
										},
										{
											"begin": 748,
											"end": 755,
											"name": "INVALID"
										},
										{
											"begin": 748,
											"end": 755,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 748,
											"end": 755,
											"name": "JUMPDEST"
										},
										{
											"begin": 748,
											"end": 755,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 748,
											"end": 755,
											"name": "MUL"
										},
										{
											"begin": 748,
											"end": 755,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 748,
											"end": 755,
											"name": "ADD"
										},
										{
											"begin": 748,
											"end": 755,
											"name": "ADD"
										},
										{
											"begin": 748,
											"end": 760,
											"name": "DUP2"
										},
										{
											"begin": 748,
											"end": 760,
											"name": "DUP2"
										},
										{
											"begin": 748,
											"end": 760,
											"name": "MSTORE"
										},
										{
											"begin": 748,
											"end": 760,
											"name": "POP"
										},
										{
											"begin": 748,
											"end": 760,
											"name": "POP"
										},
										{
											"begin": 794,
											"end": 798,
											"name": "DUP1"
										},
										{
											"begin": 799,
											"end": 800,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 794,
											"end": 801,
											"name": "DUP2"
										},
										{
											"begin": 794,
											"end": 801,
											"name": "MLOAD"
										},
										{
											"begin": 794,
											"end": 801,
											"name": "DUP2"
										},
										{
											"begin": 794,
											"end": 801,
											"name": "LT"
										},
										{
											"begin": 794,
											"end": 801,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 794,
											"end": 801,
											"name": "JUMPI"
										},
										{
											"begin": 794,
											"end": 801,
											"name": "INVALID"
										},
										{
											"begin": 794,
											"end": 801,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 794,
											"end": 801,
											"name": "JUMPDEST"
										},
										{
											"begin": 794,
											"end": 801,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 794,
											"end": 801,
											"name": "MUL"
										},
										{
											"begin": 794,
											"end": 801,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 794,
											"end": 801,
											"name": "ADD"
										},
										{
											"begin": 794,
											"end": 801,
											"name": "ADD"
										},
										{
											"begin": 794,
											"end": 801,
											"name": "MLOAD"
										},
										{
											"begin": 794,
											"end": 801,
											"name": "POP"
										},
										{
											"begin": 841,
											"end": 843,
											"name": "PUSH",
											"value": "59"
										},
										{
											"begin": 831,
											"end": 835,
											"name": "DUP2"
										},
										{
											"begin": 836,
											"end": 837,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 831,
											"end": 838,
											"name": "DUP2"
										},
										{
											"begin": 831,
											"end": 838,
											"name": "MLOAD"
										},
										{
											"begin": 831,
											"end": 838,
											"name": "DUP2"
										},
										{
											"begin": 831,
											"end": 838,
											"name": "LT"
										},
										{
											"begin": 831,
											"end": 838,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 831,
											"end": 838,
											"name": "JUMPI"
										},
										{
											"begin": 831,
											"end": 838,
											"name": "INVALID"
										},
										{
											"begin": 831,
											"end": 838,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 831,
											"end": 838,
											"name": "JUMPDEST"
										},
										{
											"begin": 831,
											"end": 838,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 831,
											"end": 838,
											"name": "MUL"
										},
										{
											"begin": 831,
											"end": 838,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 831,
											"end": 838,
											"name": "ADD"
										},
										{
											"begin": 831,
											"end": 838,
											"name": "ADD"
										},
										{
											"begin": 831,
											"end": 843,
											"name": "DUP2"
										},
										{
											"begin": 831,
											"end": 843,
											"name": "DUP2"
										},
										{
											"begin": 831,
											"end": 843,
											"name": "MSTORE"
										},
										{
											"begin": 831,
											"end": 843,
											"name": "POP"
										},
										{
											"begin": 831,
											"end": 843,
											"name": "POP"
										},
										{
											"begin": 861,
											"end": 865,
											"name": "DUP1"
										},
										{
											"begin": 866,
											"end": 867,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 861,
											"end": 868,
											"name": "DUP2"
										},
										{
											"begin": 861,
											"end": 868,
											"name": "MLOAD"
										},
										{
											"begin": 861,
											"end": 868,
											"name": "DUP2"
										},
										{
											"begin": 861,
											"end": 868,
											"name": "LT"
										},
										{
											"begin": 861,
											"end": 868,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 861,
											"end": 868,
											"name": "JUMPI"
										},
										{
											"begin": 861,
											"end": 868,
											"name": "INVALID"
										},
										{
											"begin": 861,
											"end": 868,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 861,
											"end": 868,
											"name": "JUMPDEST"
										},
										{
											"begin": 861,
											"end": 868,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 861,
											"end": 868,
											"name": "MUL"
										},
										{
											"begin": 861,
											"end": 868,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 861,
											"end": 868,
											"name": "ADD"
										},
										{
											"begin": 861,
											"end": 868,
											"name": "ADD"
										},
										{
											"begin": 854,
											"end": 868,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 854,
											"end": 868,
											"name": "DUP2"
										},
										{
											"begin": 854,
											"end": 868,
											"name": "MSTORE"
										},
										{
											"begin": 854,
											"end": 868,
											"name": "POP"
										},
										{
											"begin": 617,
											"end": 878,
											"name": "POP"
										},
										{
											"begin": 617,
											"end": 878,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 444,
											"end": 524,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 444,
											"end": 524,
											"name": "JUMPDEST"
										},
										{
											"begin": 486,
											"end": 490,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 509,
											"end": 514,
											"name": "DUP1"
										},
										{
											"begin": 515,
											"end": 516,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 509,
											"end": 517,
											"name": "DUP2"
										},
										{
											"begin": 509,
											"end": 517,
											"name": "SLOAD"
										},
										{
											"begin": 509,
											"end": 517,
											"name": "DUP2"
										},
										{
											"begin": 509,
											"end": 517,
											"name": "LT"
										},
										{
											"begin": 509,
											"end": 517,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 509,
											"end": 517,
											"name": "JUMPI"
										},
										{
											"begin": 509,
											"end": 517,
											"name": "INVALID"
										},
										{
											"begin": 509,
											"end": 517,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 509,
											"end": 517,
											"name": "JUMPDEST"
										},
										{
											"begin": 509,
											"end": 517,
											"name": "SWAP1"
										},
										{
											"begin": 509,
											"end": 517,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 509,
											"end": 517,
											"name": "MSTORE"
										},
										{
											"begin": 509,
											"end": 517,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 509,
											"end": 517,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 509,
											"end": 517,
											"name": "KECCAK256"
										},
										{
											"begin": 509,
											"end": 517,
											"name": "ADD"
										},
										{
											"begin": 509,
											"end": 517,
											"name": "SLOAD"
										},
										{
											"begin": 502,
											"end": 517,
											"name": "SWAP1"
										},
										{
											"begin": 502,
											"end": 517,
											"name": "POP"
										},
										{
											"begin": 444,
											"end": 524,
											"name": "SWAP1"
										},
										{
											"begin": 444,
											"end": 524,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 530,
											"end": 593,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 530,
											"end": 593,
											"name": "JUMPDEST"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 584,
											"end": 585,
											"name": "DUP1"
										},
										{
											"begin": 578,
											"end": 586,
											"name": "DUP2"
										},
										{
											"begin": 578,
											"end": 586,
											"name": "SLOAD"
										},
										{
											"begin": 578,
											"end": 586,
											"name": "DUP2"
										},
										{
											"begin": 578,
											"end": 586,
											"name": "LT"
										},
										{
											"begin": 578,
											"end": 586,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 578,
											"end": 586,
											"name": "JUMPI"
										},
										{
											"begin": 578,
											"end": 586,
											"name": "INVALID"
										},
										{
											"begin": 578,
											"end": 586,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 578,
											"end": 586,
											"name": "JUMPDEST"
										},
										{
											"begin": 578,
											"end": 586,
											"name": "SWAP1"
										},
										{
											"begin": 578,
											"end": 586,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 578,
											"end": 586,
											"name": "MSTORE"
										},
										{
											"begin": 578,
											"end": 586,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 578,
											"end": 586,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 578,
											"end": 586,
											"name": "KECCAK256"
										},
										{
											"begin": 578,
											"end": 586,
											"name": "ADD"
										},
										{
											"begin": 571,
											"end": 586,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 571,
											"end": 586,
											"name": "SWAP1"
										},
										{
											"begin": 571,
											"end": 586,
											"name": "SSTORE"
										},
										{
											"begin": 530,
											"end": 593,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"deleteData()": "e0ba432a",
							"insertData(uint256)": "479291ef",
							"memArrays()": "80801431",
							"readData()": "bef55ef3",
							"updateData(uint256)": "09e96008"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.0+commit.26b70077\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"deleteData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_a\",\"type\":\"uint256\"}],\"name\":\"insertData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"memArrays\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_b\",\"type\":\"uint256\"}],\"name\":\"updateData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/Arrays.sol\":\"MyContract\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Arrays.sol\":{\"keccak256\":\"0xbdf20d69f355a8fffd9c06f653bb5e1665d05d03ef6a3f3ac77dce4d7f4aa973\",\"urls\":[\"bzz-raw://41df96defa38f50f1d80dc42c54ba994a14db85137a7941e47cee6ce984bc50c\",\"dweb:/ipfs/QmV2J4UCADetc7R6vmuC9YkzYMgEdqheoaXVZvXmxWN1v8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 4,
								"contract": "contracts/Arrays.sol:MyContract",
								"label": "myArr",
								"offset": 0,
								"slot": "0",
								"type": "t_array(t_uint256)dyn_storage"
							}
						],
						"types": {
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "contracts/Arrays.sol:33:5: Warning: Function state mutability can be restricted to pure\n    function memArrays()external{\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 878,
					"file": "contracts/Arrays.sol",
					"start": 617
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Arrays.sol": {
				"ast": {
					"absolutePath": "contracts/Arrays.sol",
					"exportedSymbols": {
						"MyContract": [
							90
						]
					},
					"id": 91,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 90,
							"linearizedBaseContracts": [
								90
							],
							"name": "MyContract",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 4,
									"name": "myArr",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 90,
									"src": "100:14:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 2,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "100:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 3,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "100:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 15,
										"nodeType": "Block",
										"src": "201:136:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 12,
															"name": "_a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "222:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 9,
															"name": "myArr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4,
															"src": "211:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "211:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "211:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 14,
												"nodeType": "ExpressionStatement",
												"src": "211:14:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "479291ef",
									"id": 16,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "insertData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"name": "_a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 16,
												"src": "184:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "184:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "183:9:0"
									},
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "201:0:0"
									},
									"scope": 90,
									"src": "163:174:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "380:58:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 21,
															"name": "myArr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4,
															"src": "390:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 23,
														"indexExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "396:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "390:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 24,
														"name": "_b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "401:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "390:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 26,
												"nodeType": "ExpressionStatement",
												"src": "390:13:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "09e96008",
									"id": 28,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"name": "_b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 28,
												"src": "363:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "363:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "362:9:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "380:0:0"
									},
									"scope": 90,
									"src": "343:95:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "491:33:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 33,
														"name": "myArr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "509:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 35,
													"indexExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "515:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "509:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 32,
												"id": 36,
												"nodeType": "Return",
												"src": "502:15:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "bef55ef3",
									"id": 38,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "readData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "461:2:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 38,
												"src": "486:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "486:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "485:6:0"
									},
									"scope": 90,
									"src": "444:80:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 46,
										"nodeType": "Block",
										"src": "561:32:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "571:15:0",
													"subExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 41,
															"name": "myArr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4,
															"src": "578:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 43,
														"indexExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "584:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "578:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 45,
												"nodeType": "ExpressionStatement",
												"src": "571:15:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "e0ba432a",
									"id": 47,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deleteData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "549:2:0"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "561:0:0"
									},
									"scope": 90,
									"src": "530:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "645:233:0",
										"statements": [
											{
												"assignments": [
													54
												],
												"declarations": [
													{
														"constant": false,
														"id": 54,
														"name": "ages",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 88,
														"src": "655:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 52,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "655:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 53,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "655:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 60,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "35",
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "688:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5_by_1",
																"typeString": "int_const 5"
															},
															"value": "5"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_5_by_1",
																"typeString": "int_const 5"
															}
														],
														"id": 57,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "677:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 55,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "681:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 56,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "681:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "677:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "655:35:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 61,
															"name": "ages",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "726:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 63,
														"indexExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "731:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "726:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3130",
														"id": 64,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "736:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "726:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "726:12:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 67,
															"name": "ages",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "748:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 69,
														"indexExpression": {
															"argumentTypes": null,
															"hexValue": "31",
															"id": 68,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "753:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "748:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3430",
														"id": 70,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "758:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_40_by_1",
															"typeString": "int_const 40"
														},
														"value": "40"
													},
													"src": "748:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 72,
												"nodeType": "ExpressionStatement",
												"src": "748:12:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 73,
														"name": "ages",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "794:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"id": 75,
													"indexExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "799:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "794:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 76,
												"nodeType": "ExpressionStatement",
												"src": "794:7:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 77,
															"name": "ages",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "831:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 79,
														"indexExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "836:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "831:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3839",
														"id": 80,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "841:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_89_by_1",
															"typeString": "int_const 89"
														},
														"value": "89"
													},
													"src": "831:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 82,
												"nodeType": "ExpressionStatement",
												"src": "831:12:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "854:14:0",
													"subExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 83,
															"name": "ages",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "861:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 85,
														"indexExpression": {
															"argumentTypes": null,
															"hexValue": "32",
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "866:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "861:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 87,
												"nodeType": "ExpressionStatement",
												"src": "854:14:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "80801431",
									"id": 89,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "memArrays",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "635:2:0"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "645:0:0"
									},
									"scope": 90,
									"src": "617:261:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 91,
							"src": "25:856:0"
						}
					],
					"src": "0:881:0"
				},
				"id": 0
			}
		}
	}
}